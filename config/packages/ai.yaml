ai:
    platform:
        openai:
            api_key: '%env(OPENAI_API_KEY)%'
    agent:
        blog:
            model:
                class: 'Symfony\AI\Platform\Bridge\OpenAi\Gpt'
                name: !php/const Symfony\AI\Platform\Bridge\OpenAi\Gpt::GPT_4O_MINI
            tools:
                - 'Symfony\AI\Agent\Toolbox\Tool\SimilaritySearch'
                - service: 'clock'
                  name: 'clock'
                  description: 'Provides the current date and time.'
                  method: 'now'
        stream:
            model:
                class: 'Symfony\AI\Platform\Bridge\OpenAi\Gpt'
                name: !php/const Symfony\AI\Platform\Bridge\OpenAi\Gpt::GPT_4O_MINI
            prompt: |
                You are an example chat application where messages from the LLM are streamed to the user using
                Server-Sent Events via `symfony/ux-turbo` / Turbo Streams. This example does not use any custom
                javascript and solely relies on the built-in `live` & `turbo_stream` Stimulus controllers.
                Whatever the user asks, tell them about the application & used technologies.
            tools: false
        youtube:
            model:
                class: 'Symfony\AI\Platform\Bridge\OpenAi\Gpt'
                name: !php/const Symfony\AI\Platform\Bridge\OpenAi\Gpt::GPT_4O_MINI
            tools: false
        wikipedia:
            model:
                class: 'Symfony\AI\Platform\Bridge\OpenAi\Gpt'
                name: !php/const Symfony\AI\Platform\Bridge\OpenAi\Gpt::GPT_4O_MINI
                options:
                    temperature: 0.5
            prompt:
                text: 'Please answer the users question based on Wikipedia and provide a link to the article.'
                include_tools: true
            tools:
                - 'Symfony\AI\Agent\Toolbox\Tool\Wikipedia'
        audio:
            model:
                class: 'Symfony\AI\Platform\Bridge\OpenAi\Gpt'
                name: 'gpt-4o-mini?temperature=1.0'
            prompt: 'You are a friendly chatbot that likes to have a conversation with users and asks them some questions.'
            tools:
                # Agent in agent ðŸ¤¯
                - agent: 'blog'
                  name: 'symfony_blog'
                  description: 'Can answer questions based on the Symfony blog.'
    store:
        chroma_db:
            symfonycon:
                collection: 'symfony_blog'
    vectorizer:
        openai:
            model:
                class: 'Symfony\AI\Platform\Bridge\OpenAi\Embeddings'
                name: !php/const Symfony\AI\Platform\Bridge\OpenAi\Embeddings::TEXT_ADA_002
    indexer:
        blog:
            loader: 'Symfony\AI\Store\Document\Loader\RssFeedLoader'
            source: 'https://feeds.feedburner.com/symfony/blog'
            filters:
                - 'app.filter.week_of_symfony'
            transformers:
                - 'Symfony\AI\Store\Document\Transformer\TextTrimTransformer'
            vectorizer: 'ai.vectorizer.openai'
            store: 'ai.store.chroma_db.symfonycon'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    # Symfony\AI\Agent\Toolbox\Tool\Clock: ~
    # Symfony\AI\Agent\Toolbox\Tool\OpenMeteo: ~
    # Symfony\AI\Agent\Toolbox\Tool\SerpApi:
    #     $apiKey: '%env(SERP_API_KEY)%'
    Symfony\AI\Agent\Toolbox\Tool\Wikipedia: ~
    Symfony\AI\Agent\Toolbox\Tool\SimilaritySearch:
        $vectorizer: '@ai.vectorizer.openai'
        $store: '@ai.store.chroma_db.symfonycon'

    Symfony\AI\Store\Document\Loader\RssFeedLoader: ~
    Symfony\AI\Store\Document\Transformer\TextTrimTransformer: ~
    
    app.filter.week_of_symfony:
        class: 'Symfony\AI\Store\Document\Filter\TextContainsFilter'
        arguments:
            $needle: 'Week of Symfony'
            $caseSensitive: false
